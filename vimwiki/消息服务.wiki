Push服务是一个很复杂的系统，要考虑到性能、并发量、安全性等因素，这些都是技术上的难题，我们需要慢慢摸索、积累。

我们可以参考上述几个服务平台，看看他们是怎么做的

 

设计角度：

Ø  支持多应用，每个应用分配唯一appKey

Ø  支持多平台

Ø  支持发送到所有设备

Ø  支持发送到指定设备

Ø  支持按时间段发送

Ø  及时推送

Ø  统计推送规律

 

技术角度：

Ø  使用socket长连接，消息能够及时达到

Ø  优化协议，减少数据包大小

Ø  一般使用json数据格式

 

流程：

Ø  生成设备唯一ID

Ø  注册到pushserver

Ø  等待消息

Ø  收到消息

Ø  弹出通知

 

个人对服务器架构的想法：

首先服务器应该是分布式的、可扩展的，其中一个服务作为总服务，然后架设多个子服务器，终端设备需要先连接到总服务拿到需要连接的子服务器地址，然后再连接到具体的子服务器，总服务用于接收各app运营后台提交的push请求，然后通过子服务器分发到每个终端设备。

流程：

服务器之间的交互：

》架设总服务

》架设子服务

》子服务连接并登录到总服务

》定时向总服务报告连接情况

客户端登录过程：

》连接到总服务并获取子服务器地址

》连接并登录到子服务

》到数据库查询有没有发往此客户端的push

》如果有就发送，发送成功后删除

运营后台发送push过程：

》运营后台向总服务发送push数据

》总服务把数据保存到数据库

》然后把此push下发到子服务

》子服务在连接池里查找有没有发送对象

》发送到对应的客户端并删除数据库里对应的数据
