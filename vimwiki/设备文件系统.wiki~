设备文件系统

在类Unix操作系统中，设备文件系统允许软件通过标准输入输出系统调用与驱动程序交互，从而简化了许多任务。
设备文件系统包括设备文件、设备节点、设备特定文件，它们是驱动程序的接口，而在文件系统中，它们就像是普通文件。在微软的MS-DOS和Windows等操作系统中，也有专门的设备文件。
设备文件借鉴了Unix的特殊文件的概念。MS-DOS的早期版本并不支持文件目录层次，设备文件的文件名被设定为保留字以区分普通文件，新文件或新目录不能够使用这些设备文件的文件名。
在类Unix操作系统中包含两类设备节点，分别为字符文件与块文件。它们的区别是操作系统和硬件如何向它们读写数据。它们合称为设备特定文件，与之对应的是命名管道，它既不连接到任何设备，也不是一个文件。


本质上讲，设备节点对应于操作系统分配的资源。Unix通过存放于节点结构中的主设备号和从设备号来识别这些资源。在各种操作系统和系统平台上，这些数都是被唯一分配的。通常，主数用于指定驱动程序，而次数用于指定驱动程序控制的某一特定设备（驱动程序可能控制多个设备），在这种情况下，系统可能把次数作为参数传给驱动程序。
计算机就像对待普通文件那样，用标准系统调用访问设备节点。根据硬件的接口类型和操作系统处理输入输出的方式，设备文件可以分成两类。

字符设备
字符设备是指每次与系统传输1个字符的设备。这些设备节点通常为传真、虚拟终端和串口调制解调器之类设备提供流通信服务，它通常不支持随机存取数据。
字符设备在实现时，大多不使用缓存器。系统直接从设备读取／写入每一个字符。

块设备
块设备是指与系统间用块的方式移动数据的设备。这些设备节点通常代表可寻址设备，如硬盘、CD-ROM和内存区域。
块设备通常支持随机存取和寻址，并使用缓存器。操作系统为输入输出分配了缓存以存储一块数据。当程序向设备发送了读取或者写入数据的请求时，系统把数据中的每一个字符存储在适当的缓存中。当缓存被填满时，会采取适当的操作（把数据传走），而后系统清空缓存。

伪设备
在类Unix操作系统中，设备节点并不一定要对应物理设备。没有这种对应关系的设备是伪设备。操作系统运用了它们提供的多种功能。部份經常使用到的偽設備包括：
/dev/null
接受和丟棄所有輸入；即不產生任何輸出。
/dev/full
永遠在被填滿狀態的設備。
/dev/loop
Loop設備
/dev/zero
產生連續的NUL字元的串流(數值為0)。
/dev/random
產生一個虛假隨機的任意長度字元串流。(Blocking)
/dev/urandom
產生一個虛假隨機的任意長度字元串流。(Non-Blocking)
