4.1 需求分析
    推荐系统的任务就是联系用户和信息，一方面帮助用户发现对自已有价值的信息，另一方面让信息能够展现在对它感兴趣的用户面前，从而实现信息消费者和信息生产者的双赢。
    资讯推荐系统不需要用户提供明确的需求，而是通过分析用户的历史行为给用户的兴趣建模，从而主动给用户推荐能够满足他们兴趣和需求的资讯列表。
    另一方面，当前已有的资讯推荐系统，多数采用将符合用户兴趣偏好的推荐资讯列表直接以列表的方式展现给用户的方式。对于用户而言，用户的兴趣可能分布在多个不同的类别，在不同的类别上也有着不同的偏好程度，这种很难让用户找到感兴趣的资讯，在交互方式上也是一种不好的用户体验。
    本文对用户的兴趣进行主题聚簇，在根据用户兴趣偏好生成的推荐列表的基础上，将被推荐资讯按照用户感兴趣的主题进行聚簇，实现基于主题聚簇的资讯推荐。
4.2 详细设计
4.2.1 用户行为数据约定
    用户的行为特征受到多种因素的影响，包括用户行为的种类、用户行为产生的时间、用户行为的次数等等。本文关注的焦点在于基于主题模型、文本聚类的文本建模以及基于主题聚簇的推荐方式，对于用户行为数据仅考虑用户反馈喜欢一个文档与否。即用户的行为数据文件中记录了用户表示喜欢的资讯文档的ID，系统可以根据该文档ID找到相应的文档。
    用户行为数据的生成、记录、保存工作是由外部的UI系统、日志系统、日志存储系统实现的，这些外部系统根据推荐系统所要求的用户行为数据种类，按照存储要求记录用户的行为日志，并不在本文研究范围内。本文假定用户行为数据已经由外部系统按照推荐系统的需求存储完毕。
4.2.2 用户兴趣建模
    假设用户已经对一些资讯给出了喜好判断，喜欢其中的一部分资讯，对另一部分不是很感兴趣。那么，兴趣建模这一步要做的就是通过用户过去的这些喜好判断，产生一个模型。根据这个模型，便可以以此来判断用户是否会喜欢一篇新的资讯。所以，此处要解决的便是一个典型的有监督分类问题，理论上机器学习里的分类算法都可以在这里使用。
4.2.3 推荐列表生成
    推荐列表生成本质是对待推荐资讯列表的过滤操作，对待推荐列表中的资讯分析其是否可能被用户感兴趣，若否，则从待推荐列表去除。
    在上一步的用户兴趣建模中使用的是朴素贝叶斯分类模型，所以此时判断一篇资讯是否符合用户兴趣偏好便是一个贝叶斯分类问题。 
    推荐列表的生成，只需要把模型预测的用户最可能感兴趣的n个资讯作为推荐结果返回即可。
4.2.4 用户兴趣主题聚簇
    通过用户兴趣建模的过程，我们可以测试用户对于一篇资讯的兴趣程度，从而生成基于用户兴趣的资讯推荐列表。
    为了实现以主题方式的推荐效果，我们需要对用户的兴趣点进行主题的聚簇，获取用户最喜欢的若干个主题。
    为了获取用户兴趣点的主题聚簇，一个简单的方法是：
    a. 获取每个文档权重最高的A个主题;
    b. 设用户感兴趣的文档数为B，则对A×B个主题取并集操作，其中重复出现的主题做加权处理。
    c. 取其中权重最大的K个主题作为结果返回。
    然而，一方面自然语言本身存在相当的复杂性，包括语义的多样性、文本长度等因素；二是由于自身维度限制，LDA主题模型的主题分布密度过大;本文在兴趣主题聚簇的设计上，加入了对于聚类信息的考量，主题聚簇的过程如下：
    a. 将用户感兴趣的资讯文档按照文本聚类结果进行分类，将文档集分成几个聚簇，假设共有N个聚簇;
    b. 对于每个聚簇中上述的简单方法，获得前K个权重最高的主题;
    c. 对所有N×K个主题取并集，加权，归一化处理;
    d. 根据权重排序返回。
    从一段较长的时间来看，用户的兴趣分布往往是在大的兴趣分布上保持不变，而在小的兴趣点上随时间变化波动。本文聚焦于用户兴趣在主题上的聚簇分析，对于用户兴趣在时间的建模尚不在本文的研究范围内。
4.2.5 推荐结果主题映射
    推荐结果列表是用户可能感兴趣的来自于多种类别，包含着不同主题的的资讯的集合。为了将推荐列表根据用户的兴趣主题进行聚簇，首先需要获取用户最感兴趣的若干个主题，然后按照每篇资讯与主题的相关性，将资讯映射到主题下，返回主题列表作为展示结果给用户。用户选择相应的推荐主题后可查看与该主题关联度最高的若干个用户可能感兴趣的资讯。
4.3 具体实现
4.3.1 用户兴趣建模
    用户兴趣建模是通过用户的行为数据，获取用户表示感兴趣的资讯集，对这些感兴趣的资讯集的特征进行分析，产生用户的兴趣模型，从而可以根据该模型判断用户对于一篇文档感兴趣的程度。
    本文采用朴素贝叶斯学习方法，分析用户历史行为数据，学习用户对不同类别、不同主题的资讯的兴趣偏好，用户兴趣建模本质上是一个朴素贝叶斯分类器的训练过程。
    此处的类别信息分为喜欢与不喜欢两种。
    1. 预处理
    在准备训练数据的过程中，与在文本聚类过程中对资讯数据的预处理类似，将资讯数据进行分词、替换换行符为空白符等操作后写入到训练数据文件Cluster-Train-Data.dat文件中; 与之前操作不同的是，对于在用户行为数据中标志为喜欢的资讯，在资讯数据的行末加上表示为喜欢的类别信息。如下图所示：
    _图4.1 用户兴趣建模训练数据格式_
    2. 用户兴趣建模
    _图4.2 用户兴趣建模流程_
    使用流程3.3.5获取每篇资讯的文本特征向量，构建训练集的特征矩阵。
    使用CHI特征选择算法对文档进行降维，使用max进行过滤，只保存与类别最相关的20%的特征。
    对优化后的特征矩阵，进行贝叶斯分类器训练过程。
    首先，通过训练数据中的分类信息，计算每个分类的先验概率;
    然后，对于特征矩阵中的每一个特征项，计算特征项对每一个分类的极大似然概率;
    分类的先验概率以及特征项对每一个分类的极大似然概率组合得到了朴素贝叶斯分类器的分类模型，将分类模型保存到naive_bayes.model文件中。
4.3.2 推荐列表生成
    推荐列表生成旨成根据用户的兴趣模型，从用户未阅读过的资讯中选择出用户可能最感兴趣的资讯列表。为用户生成推荐列表的过程包含以下三个步骤：
    _图4.3 生成推荐列表流程_
    1. 获取待推荐资讯集
    对于用户而言，待推荐资讯集简言而之即是所有用户未阅读过的资讯集，然而资讯是一种时效性很强的信息，而且每天中新产生的资讯的数量也是一个不小的基数，所以在本文中获取的待推荐资讯数据要求为在当前推荐时间72小时时间内的、用户尚未阅读过的资讯。
    2. 构建特征矩阵
    使用流程3.3.5获取每篇待推荐的资讯的文本特征向量，构建数据集的特征矩阵。
    使用CHI特征选择算法对文档进行降维，使用max进行过滤，只保存与类别最相关的20%的特征。
    3. 推荐结果生成
    对于待推荐数据集的特征矩阵，使用过程4.3.1保存的用户兴趣的朴素贝叶斯模型。返回对于待推荐资讯的分类结果，及在分类中所占权重。返回数据如下：
    [1,    0,    1，   ...，0]
    [0.75, 0.68, 0.90, ...，0.55]
    其中，矩阵的每一列表示一篇待推荐资讯，每一列中的第一行表示该资讯用户感兴趣与否，第二行表示此资讯属于该类别的比重。比如第一篇待推荐资讯有75%可能性受到用户的喜欢。
4.3.3 用户兴趣主题聚簇
    用户兴趣主题聚簇旨在根据用户的历史行为数据，分析出用户最为感兴趣的若干个主题。其工作流程如下图所示：
    _图4.4 用户兴趣主题聚簇_
    1. 获取用户兴趣文档集
    根据用户历史行为记录，获取用户明确的兴趣文档集。
    2. 文档分类
    使用过程3.3.4中构建的文本分类器对兴趣文档集中的文档进行分类操作。返回兴趣文档集的分类向量：向量中的第i个元素表示第i篇兴趣文档的类别信息。
    3. 分类主题聚簇
    从配置文件中获取分类聚簇主题数CT，及用户兴趣聚簇主题数IT;
    根据分类向量，将兴趣按类别信息分为若干个集合，设有M个集合(M<K)。对于每个集合，执行以下操作：
    a. 获取属于该集合的文档集, 设有N篇文档;
    b. 针对每个文档，从LDA的文档-主题分布中获取该文档权重最高的3个主题;
    c. 对3×N个主题取并集，其中主题每重复一次则权重加1，即出现3次的主题权重为3。
    d. 对主题按权重进行排序，返回其中权重最高的3个主题。
    _图4.5 获取分类中聚簇主题_
    4. 用户兴趣主题
    对从M个集合中返回的总共3M个主题取并集、加权、排序，返回权重最高的3个主题。
    若返回的主题集中主题的权重分布均匀，即无法按顺序找出权重最高的3个主题。设权重较高的主题数为XX个(X<3)，则在其余的3×M-X个主题随机选择3-X个主题返回。
    将用户兴趣聚簇主题保存。
4.3.4 推荐结果主题关联
    为了实现基于主题聚簇的资讯推荐，在推荐列表生成后，我们需要根据用户的兴趣主题聚簇结果，将推荐列表中的资讯按类别关联到相应的主题下。流程图如下：
    _图4.6 推荐列表主题关联_
    1. 将资讯关联到主题
    我们希望用户在选择某一主题后，可以看到与该主题相关联的资讯信息。所以，需要在系统中维护从主题到资讯的关联关系。
    设用户兴趣聚簇主题数为Z，则建立Z+1个主题-资讯关联，其中第Z+1表示未关联到Z个主题的其它资讯。
    对于一篇资讯是否应该关联到某一主题，按照以下步骤来决定：
    a. 获取用户兴趣聚簇主题;
    b. 从文档-主题分布文件中获取此资讯主题分布中权重最高的IT个主题;
    c. 遍历这IT个主题，若此主题存在于用户兴趣聚簇主题集合中，则将该资讯关联到该主题;
    d. 若文档的前IT个主题都不存在于用户聚簇主题中，则将该资讯关联到第Z+1个主题。
    2. 推荐展示
    根据返回的Z+1个主题-资讯关联，我们实现了基于主题聚簇的资讯推荐。
4.4 结果展示
